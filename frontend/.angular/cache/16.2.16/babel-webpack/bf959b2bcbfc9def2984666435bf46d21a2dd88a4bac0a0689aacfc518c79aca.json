{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiBaseUrl}/products`;\n  }\n  // Get all products\n  getProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  // Get products by category\n  getProductsByCategory(categoryId) {\n    return this.http.get(`${environment.apiBaseUrl}/categories/${categoryId}/products`);\n  }\n  // Get product by ID\n  getProduct(productId) {\n    return this.http.get(`${this.apiUrl}/${productId}`);\n  }\n  // Search products\n  searchProducts(query) {\n    return this.http.get(`${this.apiUrl}/search?q=${query}`);\n  }\n  // Create product (admin only)\n  createProduct(product) {\n    return this.http.post(this.apiUrl, product);\n  }\n  // Update product (admin only)\n  updateProduct(productId, product) {\n    return this.http.put(`${this.apiUrl}/${productId}`, product);\n  }\n  // Delete product (admin only)\n  deleteProduct(productId) {\n    return this.http.delete(`${this.apiUrl}/${productId}`);\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","ProductService","constructor","http","apiUrl","apiBaseUrl","getProducts","get","getProductsByCategory","categoryId","getProduct","productId","searchProducts","query","createProduct","product","post","updateProduct","put","deleteProduct","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspace/simplewebsite/frontend/src/app/services/product.service.ts"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private apiUrl = `${environment.apiBaseUrl}/products`;\n  \n  constructor(private http: HttpClient) { }\n  \n  // Get all products\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.apiUrl);\n  }\n  \n  // Get products by category\n  getProductsByCategory(categoryId: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.apiBaseUrl}/categories/${categoryId}/products`);\n  }\n  \n  // Get product by ID\n  getProduct(productId: string): Observable<Product> {\n    return this.http.get<Product>(`${this.apiUrl}/${productId}`);\n  }\n  \n  // Search products\n  searchProducts(query: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.apiUrl}/search?q=${query}`);\n  }\n  \n  // Create product (admin only)\n  createProduct(product: Partial<Product>): Observable<Product> {\n    return this.http.post<Product>(this.apiUrl, product);\n  }\n  \n  // Update product (admin only)\n  updateProduct(productId: string, product: Partial<Product>): Observable<Product> {\n    return this.http.put<Product>(`${this.apiUrl}/${productId}`, product);\n  }\n  \n  // Delete product (admin only)\n  deleteProduct(productId: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${productId}`);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAwCA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,WAAW;EAEb;EAExC;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,MAAM,CAAC;EAC9C;EAEA;EACAI,qBAAqBA,CAACC,UAAkB;IACtC,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAY,GAAGP,WAAW,CAACK,UAAU,eAAeI,UAAU,WAAW,CAAC;EAChG;EAEA;EACAC,UAAUA,CAACC,SAAiB;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,MAAM,IAAIO,SAAS,EAAE,CAAC;EAC9D;EAEA;EACAC,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,MAAM,aAAaS,KAAK,EAAE,CAAC;EACrE;EAEA;EACAC,aAAaA,CAACC,OAAyB;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAU,IAAI,CAACZ,MAAM,EAAEW,OAAO,CAAC;EACtD;EAEA;EACAE,aAAaA,CAACN,SAAiB,EAAEI,OAAyB;IACxD,OAAO,IAAI,CAACZ,IAAI,CAACe,GAAG,CAAU,GAAG,IAAI,CAACd,MAAM,IAAIO,SAAS,EAAE,EAAEI,OAAO,CAAC;EACvE;EAEA;EACAI,aAAaA,CAACR,SAAiB;IAC7B,OAAO,IAAI,CAACR,IAAI,CAACiB,MAAM,CAAO,GAAG,IAAI,CAAChB,MAAM,IAAIO,SAAS,EAAE,CAAC;EAC9D;;;uBAtCWV,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdvB,cAAc;MAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}