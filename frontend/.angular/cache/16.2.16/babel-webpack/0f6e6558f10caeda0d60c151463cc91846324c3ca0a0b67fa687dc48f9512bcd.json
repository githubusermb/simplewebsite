{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProductListComponent = class ProductListComponent {\n  constructor(productService, categoryService, route, router) {\n    this.productService = productService;\n    this.categoryService = categoryService;\n    this.route = route;\n    this.router = router;\n    this.products = [];\n    this.categories = [];\n    this.filteredProducts = [];\n    this.selectedCategory = null;\n    this.searchQuery = '';\n    this.sortOption = 'name_asc';\n    this.isLoading = true;\n    this.error = null;\n  }\n  ngOnInit() {\n    this.loadCategories();\n    // Subscribe to query params to get filters\n    this.route.queryParams.subscribe(params => {\n      this.selectedCategory = params['category'] || null;\n      this.searchQuery = params['search'] || '';\n      this.sortOption = params['sort'] || 'name_asc';\n      this.loadProducts();\n    });\n  }\n  loadProducts() {\n    this.isLoading = true;\n    // If category filter is applied\n    if (this.selectedCategory) {\n      this.productService.getProductsByCategory(this.selectedCategory).subscribe({\n        next: products => {\n          this.products = products;\n          this.applyFilters();\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error('Error loading products by category:', error);\n          this.error = 'Failed to load products. Please try again later.';\n          this.isLoading = false;\n        }\n      });\n    }\n    // If search query is applied\n    else if (this.searchQuery) {\n      this.productService.searchProducts(this.searchQuery).subscribe({\n        next: products => {\n          this.products = products;\n          this.applyFilters();\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error('Error searching products:', error);\n          this.error = 'Failed to search products. Please try again later.';\n          this.isLoading = false;\n        }\n      });\n    }\n    // Get all products\n    else {\n      this.productService.getProducts().subscribe({\n        next: products => {\n          this.products = products;\n          this.applyFilters();\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error('Error loading products:', error);\n          this.error = 'Failed to load products. Please try again later.';\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n  loadCategories() {\n    this.categoryService.getCategories().subscribe({\n      next: categories => {\n        this.categories = categories;\n      },\n      error: error => {\n        console.error('Error loading categories:', error);\n      }\n    });\n  }\n  applyFilters() {\n    // First apply any text search filter\n    let filtered = [...this.products];\n    if (this.searchQuery) {\n      const query = this.searchQuery.toLowerCase();\n      filtered = filtered.filter(product => product.name.toLowerCase().includes(query) || product.description.toLowerCase().includes(query));\n    }\n    // Then sort the results\n    switch (this.sortOption) {\n      case 'name_asc':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'name_desc':\n        filtered.sort((a, b) => b.name.localeCompare(a.name));\n        break;\n      case 'price_asc':\n        filtered.sort((a, b) => a.price - b.price);\n        break;\n      case 'price_desc':\n        filtered.sort((a, b) => b.price - a.price);\n        break;\n    }\n    this.filteredProducts = filtered;\n  }\n  onCategoryChange(event) {\n    const categoryId = event.target.value || null;\n    this.updateQueryParams({\n      category: categoryId\n    });\n  }\n  onSortChange(event) {\n    const sortOption = event.target.value;\n    this.updateQueryParams({\n      sort: sortOption\n    });\n  }\n  onSearch(query) {\n    this.updateQueryParams({\n      search: query\n    });\n  }\n  updateQueryParams(params) {\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: {\n        ...params\n      },\n      queryParamsHandling: 'merge'\n    });\n  }\n  onProductAddedToCart(product) {\n    // You could show a notification or update UI here\n    console.log(`Product added to cart: ${product.name}`);\n  }\n  clearFilters() {\n    this.router.navigate(['/products']);\n  }\n};\nProductListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})], ProductListComponent);","map":{"version":3,"names":["Component","ProductListComponent","constructor","productService","categoryService","route","router","products","categories","filteredProducts","selectedCategory","searchQuery","sortOption","isLoading","error","ngOnInit","loadCategories","queryParams","subscribe","params","loadProducts","getProductsByCategory","next","applyFilters","console","searchProducts","getProducts","getCategories","filtered","query","toLowerCase","filter","product","name","includes","description","sort","a","b","localeCompare","price","onCategoryChange","event","categoryId","target","value","updateQueryParams","category","onSortChange","onSearch","search","navigate","relativeTo","queryParamsHandling","onProductAddedToCart","log","clearFilters","__decorate","selector","templateUrl","styleUrls"],"sources":["/workspace/simplewebsite/frontend/src/app/pages/product-list/product-list.component.ts"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from '../../models/product.model';\nimport { Category } from '../../models/category.model';\nimport { ProductService } from '../../services/product.service';\nimport { CategoryService } from '../../services/category.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit {\n  products: Product[] = [];\n  categories: Category[] = [];\n  filteredProducts: Product[] = [];\n  selectedCategory: string | null = null;\n  searchQuery: string = '';\n  sortOption: string = 'name_asc';\n  isLoading = true;\n  error: string | null = null;\n  \n  constructor(\n    private productService: ProductService,\n    private categoryService: CategoryService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.loadCategories();\n    \n    // Subscribe to query params to get filters\n    this.route.queryParams.subscribe(params => {\n      this.selectedCategory = params['category'] || null;\n      this.searchQuery = params['search'] || '';\n      this.sortOption = params['sort'] || 'name_asc';\n      \n      this.loadProducts();\n    });\n  }\n  \n  loadProducts(): void {\n    this.isLoading = true;\n    \n    // If category filter is applied\n    if (this.selectedCategory) {\n      this.productService.getProductsByCategory(this.selectedCategory).subscribe({\n        next: (products) => {\n          this.products = products;\n          this.applyFilters();\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Error loading products by category:', error);\n          this.error = 'Failed to load products. Please try again later.';\n          this.isLoading = false;\n        }\n      });\n    } \n    // If search query is applied\n    else if (this.searchQuery) {\n      this.productService.searchProducts(this.searchQuery).subscribe({\n        next: (products) => {\n          this.products = products;\n          this.applyFilters();\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Error searching products:', error);\n          this.error = 'Failed to search products. Please try again later.';\n          this.isLoading = false;\n        }\n      });\n    } \n    // Get all products\n    else {\n      this.productService.getProducts().subscribe({\n        next: (products) => {\n          this.products = products;\n          this.applyFilters();\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Error loading products:', error);\n          this.error = 'Failed to load products. Please try again later.';\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n  \n  loadCategories(): void {\n    this.categoryService.getCategories().subscribe({\n      next: (categories) => {\n        this.categories = categories;\n      },\n      error: (error) => {\n        console.error('Error loading categories:', error);\n      }\n    });\n  }\n  \n  applyFilters(): void {\n    // First apply any text search filter\n    let filtered = [...this.products];\n    \n    if (this.searchQuery) {\n      const query = this.searchQuery.toLowerCase();\n      filtered = filtered.filter(product => \n        product.name.toLowerCase().includes(query) || \n        product.description.toLowerCase().includes(query)\n      );\n    }\n    \n    // Then sort the results\n    switch (this.sortOption) {\n      case 'name_asc':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'name_desc':\n        filtered.sort((a, b) => b.name.localeCompare(a.name));\n        break;\n      case 'price_asc':\n        filtered.sort((a, b) => a.price - b.price);\n        break;\n      case 'price_desc':\n        filtered.sort((a, b) => b.price - a.price);\n        break;\n    }\n    \n    this.filteredProducts = filtered;\n  }\n  \n  onCategoryChange(event: Event): void {\n    const categoryId = (event.target as HTMLSelectElement).value || null;\n    this.updateQueryParams({ category: categoryId });\n  }\n  \n  onSortChange(event: Event): void {\n    const sortOption = (event.target as HTMLSelectElement).value;\n    this.updateQueryParams({ sort: sortOption });\n  }\n  \n  onSearch(query: string): void {\n    this.updateQueryParams({ search: query });\n  }\n  \n  updateQueryParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { ...params },\n      queryParamsHandling: 'merge'\n    });\n  }\n  \n  onProductAddedToCart(product: Product): void {\n    // You could show a notification or update UI here\n    console.log(`Product added to cart: ${product.name}`);\n  }\n  \n  clearFilters(): void {\n    this.router.navigate(['/products']);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}