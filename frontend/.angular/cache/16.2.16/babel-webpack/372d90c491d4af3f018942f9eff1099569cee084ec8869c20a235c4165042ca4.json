{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiBaseUrl}/categories`;\n  }\n  // Get all categories\n  getCategories() {\n    return this.http.get(this.apiUrl);\n  }\n  // Get category by ID\n  getCategory(categoryId) {\n    return this.http.get(`${this.apiUrl}/${categoryId}`);\n  }\n  // Create category (admin only)\n  createCategory(category) {\n    return this.http.post(this.apiUrl, category);\n  }\n  // Update category (admin only)\n  updateCategory(categoryId, category) {\n    return this.http.put(`${this.apiUrl}/${categoryId}`, category);\n  }\n  // Delete category (admin only)\n  deleteCategory(categoryId) {\n    return this.http.delete(`${this.apiUrl}/${categoryId}`);\n  }\n  static {\n    this.ɵfac = function CategoryService_Factory(t) {\n      return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CategoryService,\n      factory: CategoryService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","CategoryService","constructor","http","apiUrl","apiBaseUrl","getCategories","get","getCategory","categoryId","createCategory","category","post","updateCategory","put","deleteCategory","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspace/simplewebsite/frontend/src/app/services/category.service.ts"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Category } from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private apiUrl = `${environment.apiBaseUrl}/categories`;\n  \n  constructor(private http: HttpClient) { }\n  \n  // Get all categories\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiUrl);\n  }\n  \n  // Get category by ID\n  getCategory(categoryId: string): Observable<Category> {\n    return this.http.get<Category>(`${this.apiUrl}/${categoryId}`);\n  }\n  \n  // Create category (admin only)\n  createCategory(category: Partial<Category>): Observable<Category> {\n    return this.http.post<Category>(this.apiUrl, category);\n  }\n  \n  // Update category (admin only)\n  updateCategory(categoryId: string, category: Partial<Category>): Observable<Category> {\n    return this.http.put<Category>(`${this.apiUrl}/${categoryId}`, category);\n  }\n  \n  // Delete category (admin only)\n  deleteCategory(categoryId: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${categoryId}`);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AA4CA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,aAAa;EAEf;EAExC;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,IAAI,CAACH,MAAM,CAAC;EAC/C;EAEA;EACAI,WAAWA,CAACC,UAAkB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,MAAM,IAAIK,UAAU,EAAE,CAAC;EAChE;EAEA;EACAC,cAAcA,CAACC,QAA2B;IACxC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAW,IAAI,CAACR,MAAM,EAAEO,QAAQ,CAAC;EACxD;EAEA;EACAE,cAAcA,CAACJ,UAAkB,EAAEE,QAA2B;IAC5D,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAW,GAAG,IAAI,CAACV,MAAM,IAAIK,UAAU,EAAE,EAAEE,QAAQ,CAAC;EAC1E;EAEA;EACAI,cAAcA,CAACN,UAAkB;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIK,UAAU,EAAE,CAAC;EAC/D;;;uBA5BWR,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfnB,eAAe;MAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}